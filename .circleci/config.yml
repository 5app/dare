version: 2.1

################################
# Aliases

aliases:
    - &dir ~/repo

################################
# Executors

executors:
    ubuntu-machine:
        working_directory: *dir
        machine:
            # locally we use docker-compose to manage the services for our integration tests,
            # and we use the mysql cli (docker-compose exec) to import data for each test.
            # this means, we can't use docker as our executor.
            # The alternative (Docker-in-docker via circle-ci) requires some oddities for mounting
            # volumes and networking, so using a real VM is the easiest option:
            # https://circleci.com/docs/2.0/docker-compose/#using-docker-compose-with-docker-executor
            image: ubuntu-2004:2022.10.1

################################
# Orbs

orbs:
    node: circleci/node@5.2.0

################################
# Jobs

jobs:
    test:
        executor:
            name: node/default
            resource_class: small
        steps:
            - checkout
            - node/install-packages
            - run:
                  environment:
                      MOCHA_FILE: /tmp/test-results/mocha.xml
                  name: run mocha tests
                  command: |
                      mkdir /tmp/test-results
                      npm run test:ci
            - store_test_results:
                  path: /tmp/test-results

    integration:
        parameters:
            db_engine:
                default: 'mysql:5.6'
                type: string
        executor: ubuntu-machine
        steps:
            - checkout
            - node/install-packages
            - run:
                  name: Run integration tests
                  command: DB_ENGINE=<< parameters.db_engine >> npm run test:integration -- --exit --timeout=4000

    release:
        executor:
            name: node/default
            resource_class: small
        steps:
            - checkout
            - node/install-packages
            - run: npx semantic-release

################################
# Workflows

workflows:
    build:
        jobs:
            - test
            - integration:
                  matrix:
                      parameters:
                          db_engine:
                              [
                                  'mysql:5.6',
                                  'mysql:5.7.40',
                                  'mysql:8.0.23',
                                  'mariadb:11.4',
                                  'postgres:16.3',
                              ]
            - release:
                  context: org-global
                  requires:
                      - test
                      - integration
